apiVersion: v1
kind: ConfigMap
metadata:
  name: learner-config
  namespace: {{.Values.namespace}}
data:
  tensorflow_cpu_latest_CURRENT: manual
  tensorflow_cpu_latest-py3_CURRENT: manual
  tensorflow_gpu_latest-gpu-py3_CURRENT: manual
  tensorflow_gpu_latest-gpu_CURRENT: manual
  tensorflow_gpu_1.6.0-gpu-py3_CURRENT: manual
  tensorflow_gpu_1.6.0-gpu_CURRENT: manual
  tensorflow_cpu_1.6.0_CURRENT: manual
  tensorflow_cpu_1.6.0-py3_CURRENT: manual
  tensorflow_gpu_1.5.0-gpu-py3_CURRENT: manual
  tensorflow_gpu_1.5.0-gpu_CURRENT: manual
  tensorflow_cpu_1.5.0_CURRENT: manual
  tensorflow_cpu_1.5.0-py3_CURRENT: manual
  tensorflow_gpu_1.4.0-gpu-py3_CURRENT: manual
  tensorflow_gpu_1.4.0-gpu_CURRENT: manual
  tensorflow_cpu_1.4.0_CURRENT: manual
  tensorflow_cpu_1.4.0-py3_CURRENT: manual
  tensorflow_gpu_1.3.0-gpu-py3_CURRENT: manual
  tensorflow_gpu_1.3.0-gpu_CURRENT: manual
  tensorflow_cpu_1.3.0_CURRENT: manual
  tensorflow_cpu_1.3.0-py3_CURRENT: manual
  caffe_cpu_cpu_CURRENT: master-39
  caffe_gpu_gpu_CURRENT: master-39
  caffe_cpu_intel_CURRENT: master-39
  pytorch_gpu_v0.2_CURRENT: master-39
  pytorch_gpu_latest_CURRENT: master-39
  caffe2_cpu_c2v0.8.1.cpu.full.ubuntu14.04_CURRENT: master-39
  caffe2_gpu_c2v0.8.1.cuda8.cudnn7.ubuntu16.04_CURRENT: master-39
  caffe2_cpu_c2v0.8.0.cpu.full.ubuntu16.04_CURRENT: master-39
  caffe2_gpu_latest_CURRENT: master-39
---

apiVersion: v1
kind: ConfigMap
metadata:
  name: learner-entrypoint-files
  namespace: {{.Values.namespace}}
data:
  train.sh: |
    #!/bin/bash

    echo "Training with training/test data at:"
    echo "  DATA_DIR: $DATA_DIR"
    echo "  MODEL_DIR: $MODEL_DIR"
    echo "  TRAINING_JOB: $TRAINING_JOB"
    echo "  TRAINING_COMMAND: $TRAINING_COMMAND"

    echo "Storing trained model at:"
    echo "  RESULT_DIR: $RESULT_DIR"

    echo 'Contents of $MODEL_DIR'
    ls -la $MODEL_DIR
    echo 'Contents of $DATA_DIR'
    ls -la $DATA_DIR

    # Switch to model dir
    cd $MODEL_DIR
    export PYTHONPATH=$PYTHONPATH:$PWD

    env | sort

    echo "$(date): Running training job"
    eval "$TRAINING_COMMAND 2>&1"
    cmd_exit=$?

    echo "Training process finished. Exit code: $cmd_exit"

    if [ ${cmd_exit} -ne 0 ];
    then
      echo "Job exited with error code ${cmd_exit}"
      exit ${cmd_exit}
    fi
